{"ast":null,"code":"var _jsxFileName = \"/Users/kal/Documents/dndexample/dnd/src/Container.tsx\",\n    _s = $RefreshSig$();\n\nimport update from \"immutability-helper\";\nimport { memo, useCallback, useState } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { Card } from \"./Card\";\nimport { ItemTypes } from \"./ItemTypes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  width: 400\n};\nconst ITEMS = [{\n  id: 1,\n  text: \"Write a cool JS library\"\n}, {\n  id: 2,\n  text: \"Make it generic enough\"\n}, {\n  id: 3,\n  text: \"Write README\"\n}, {\n  id: 4,\n  text: \"Create some examples\"\n}, {\n  id: 5,\n  text: \"Spam in Twitter and IRC to promote it\"\n}, {\n  id: 6,\n  text: \"???\"\n}, {\n  id: 7,\n  text: \"PROFIT\"\n}];\nexport const Container = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(function Container() {\n  _s();\n\n  const [cards, setCards] = useState(ITEMS);\n  const findCard = useCallback(id => {\n    const card = cards.filter(c => `${c.id}` === id)[0];\n    return {\n      card,\n      index: cards.indexOf(card)\n    };\n  }, [cards]);\n  const moveCard = useCallback((id, atIndex) => {\n    const {\n      card,\n      index\n    } = findCard(id);\n    setCards(update(cards, {\n      $splice: [[index, 1], [atIndex, 0, card]]\n    }));\n  }, [findCard, cards, setCards]);\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.CARD\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        id: `${card.id}`,\n        text: card.text,\n        moveCard: moveCard,\n        findCard: findCard\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}, \"V+XJdTMKRBOkJuDTYxMR3stwopA=\", false, function () {\n  return [useDrop];\n})), \"V+XJdTMKRBOkJuDTYxMR3stwopA=\", false, function () {\n  return [useDrop];\n});\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container$memo\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["update","memo","useCallback","useState","useDrop","Card","ItemTypes","style","width","ITEMS","id","text","Container","cards","setCards","findCard","card","filter","c","index","indexOf","moveCard","atIndex","$splice","drop","accept","CARD","map"],"sources":["/Users/kal/Documents/dndexample/dnd/src/Container.tsx"],"sourcesContent":["import update from \"immutability-helper\";\nimport type { FC } from \"react\";\nimport { memo, useCallback, useState } from \"react\";\nimport { useDrop } from \"react-dnd\";\n\nimport { Card } from \"./Card\";\nimport { ItemTypes } from \"./ItemTypes\";\n\nconst style = {\n  width: 400,\n};\n\nexport interface ContainerState {\n  cards: any[];\n}\n\nconst ITEMS = [\n  {\n    id: 1,\n    text: \"Write a cool JS library\",\n  },\n  {\n    id: 2,\n    text: \"Make it generic enough\",\n  },\n  {\n    id: 3,\n    text: \"Write README\",\n  },\n  {\n    id: 4,\n    text: \"Create some examples\",\n  },\n  {\n    id: 5,\n    text: \"Spam in Twitter and IRC to promote it\",\n  },\n  {\n    id: 6,\n    text: \"???\",\n  },\n  {\n    id: 7,\n    text: \"PROFIT\",\n  },\n];\n\nexport const Container: FC = memo(function Container() {\n  const [cards, setCards] = useState(ITEMS);\n\n  const findCard = useCallback(\n    (id: string) => {\n      const card = cards.filter((c) => `${c.id}` === id)[0] as {\n        id: number;\n        text: string;\n      };\n      return {\n        card,\n        index: cards.indexOf(card),\n      };\n    },\n    [cards]\n  );\n\n  const moveCard = useCallback(\n    (id: string, atIndex: number) => {\n      const { card, index } = findCard(id);\n      setCards(\n        update(cards, {\n          $splice: [\n            [index, 1],\n            [atIndex, 0, card],\n          ],\n        })\n      );\n    },\n    [findCard, cards, setCards]\n  );\n\n  const [, drop] = useDrop(() => ({ accept: ItemTypes.CARD }));\n  return (\n    <>\n      <div>\n        {cards.map((card) => (\n          <Card\n            key={card.id}\n            id={`${card.id}`}\n            text={card.text}\n            moveCard={moveCard}\n            findCard={findCard}\n          />\n        ))}\n      </div>\n      {/* <div ref={drop} style={style}>\n        asdads\n      </div> */}\n    </>\n  );\n});\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AAEA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;;;AAEA,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAE;AADK,CAAd;AAQA,MAAMC,KAAK,GAAG,CACZ;EACEC,EAAE,EAAE,CADN;EAEEC,IAAI,EAAE;AAFR,CADY,EAKZ;EACED,EAAE,EAAE,CADN;EAEEC,IAAI,EAAE;AAFR,CALY,EASZ;EACED,EAAE,EAAE,CADN;EAEEC,IAAI,EAAE;AAFR,CATY,EAaZ;EACED,EAAE,EAAE,CADN;EAEEC,IAAI,EAAE;AAFR,CAbY,EAiBZ;EACED,EAAE,EAAE,CADN;EAEEC,IAAI,EAAE;AAFR,CAjBY,EAqBZ;EACED,EAAE,EAAE,CADN;EAEEC,IAAI,EAAE;AAFR,CArBY,EAyBZ;EACED,EAAE,EAAE,CADN;EAEEC,IAAI,EAAE;AAFR,CAzBY,CAAd;AA+BA,OAAO,MAAMC,SAAa,iCAAGX,IAAI,SAAC,SAASW,SAAT,GAAqB;EAAA;;EACrD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACM,KAAD,CAAlC;EAEA,MAAMM,QAAQ,GAAGb,WAAW,CACzBQ,EAAD,IAAgB;IACd,MAAMM,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAcC,CAAD,IAAQ,GAAEA,CAAC,CAACR,EAAG,EAAR,KAAcA,EAAlC,EAAsC,CAAtC,CAAb;IAIA,OAAO;MACLM,IADK;MAELG,KAAK,EAAEN,KAAK,CAACO,OAAN,CAAcJ,IAAd;IAFF,CAAP;EAID,CAVyB,EAW1B,CAACH,KAAD,CAX0B,CAA5B;EAcA,MAAMQ,QAAQ,GAAGnB,WAAW,CAC1B,CAACQ,EAAD,EAAaY,OAAb,KAAiC;IAC/B,MAAM;MAAEN,IAAF;MAAQG;IAAR,IAAkBJ,QAAQ,CAACL,EAAD,CAAhC;IACAI,QAAQ,CACNd,MAAM,CAACa,KAAD,EAAQ;MACZU,OAAO,EAAE,CACP,CAACJ,KAAD,EAAQ,CAAR,CADO,EAEP,CAACG,OAAD,EAAU,CAAV,EAAaN,IAAb,CAFO;IADG,CAAR,CADA,CAAR;EAQD,CAXyB,EAY1B,CAACD,QAAD,EAAWF,KAAX,EAAkBC,QAAlB,CAZ0B,CAA5B;EAeA,MAAM,GAAGU,IAAH,IAAWpB,OAAO,CAAC,OAAO;IAAEqB,MAAM,EAAEnB,SAAS,CAACoB;EAApB,CAAP,CAAD,CAAxB;EACA,oBACE;IAAA,uBACE;MAAA,UACGb,KAAK,CAACc,GAAN,CAAWX,IAAD,iBACT,QAAC,IAAD;QAEE,EAAE,EAAG,GAAEA,IAAI,CAACN,EAAG,EAFjB;QAGE,IAAI,EAAEM,IAAI,CAACL,IAHb;QAIE,QAAQ,EAAEU,QAJZ;QAKE,QAAQ,EAAEN;MALZ,GACOC,IAAI,CAACN,EADZ;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAkBD,CAnDgC;EAAA,QAgCdN,OAhCc;AAAA,GAAP;EAAA,QAgCPA,OAhCO;AAAA,EAAnB;MAAMQ,S"},"metadata":{},"sourceType":"module"}